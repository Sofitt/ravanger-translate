#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ –º–æ–¥—É–ª–µ–π —á–µ—Ä–µ–∑ LLM
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./llm_batch_translate.sh [--prepare-only] [--translate-only] [--apply-only]

set -e  # –û—Å—Ç–∞–Ω–æ–≤ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á–µ—Ä–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç—ã)
API_URL="${LLM_API_URL:-http://127.0.0.1:11434/api/chat}"  # URL API Ollama –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
BACKEND="${LLM_BACKEND:-ollama}"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º ollama –∫–∞–∫ –±—ç–∫–µ–Ω–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
MODEL="${LLM_MODEL:-saiga}"  # –ò–º—è –º–æ–¥–µ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è Ollama
BATCH_SIZE="${LLM_BATCH_SIZE:-5}"  # –†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
MAX_RETRIES="${LLM_MAX_RETRIES:-3}"  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–æ–≤—Ç–æ—Ä–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
TEMPERATURE="${LLM_TEMPERATURE:-0.1}"  # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (0.0-1.0)
TOP_P="${LLM_TOP_P:-0.7}"  # Top-p sampling (0.0-1.0)
MODULES_DIR="../translation_modules"
JSON_DIR="../temp_files/llm_json"
BACKUP_DIR="../temp_files/backups"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏
print_header() {
    echo -e "${BLUE}========================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}========================================${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
backup_modules() {
    print_header "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"

    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    BACKUP_PATH="${BACKUP_DIR}/backup_${TIMESTAMP}"

    mkdir -p "$BACKUP_PATH"
    cp -r "$MODULES_DIR"/*.rpy "$BACKUP_PATH/" 2>/dev/null || true

    print_success "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $BACKUP_PATH"
}

# –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
prepare_modules() {
    print_header "–®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–æ–¥—É–ª–µ–π –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞"

    mkdir -p "$JSON_DIR"

    python3 llm_translate_prepare.py \
        --batch "$MODULES_DIR" \
        --batch-output "$JSON_DIR"

    print_success "–ú–æ–¥—É–ª–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã"
}

# –®–∞–≥ 2: –ü–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ LLM
translate_modules() {
    print_header "–®–∞–≥ 2: –ü–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ LLM"

    echo "API URL: $API_URL"
    echo "Model: $MODEL"
    echo "Temperature: $TEMPERATURE"
    echo ""

    # –°—á–µ—Ç—á–∏–∫–∏
    total=0
    success=0
    failed=0

    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ JSON —Ñ–∞–π–ª—ã
    for input_file in "$JSON_DIR"/*.json; do
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        basename=$(basename "$input_file" .json)
        if [[ "$basename" == *"_translated" ]]; then
            continue
        fi

        output_file="${JSON_DIR}/${basename}_translated.json"

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if [ -f "$output_file" ]; then
            print_warning "–ü—Ä–æ–ø—É—â–µ–Ω (—É–∂–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω): $basename"
            continue
        fi


        echo ""
        echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        echo "–ü–µ—Ä–µ–≤–æ–¥ –º–æ–¥—É–ª—è: $basename"
        echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥
        echo -e "${BLUE}–ü–µ—Ä–µ–≤–æ–¥ $json_file...${NC}"
        echo -e "${YELLOW}–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞:${NC}"
        echo "  Backend: $BACKEND"
        echo "  API URL: $API_URL"
        echo "  Model: $MODEL"
        echo "  Temperature: $TEMPERATURE"
        echo "  Top-p: $TOP_P"

        if python3 llm_translate.py \
            --input "$json_file" \
            --output "${json_file%.json}_translated.json" \
            --backend "$BACKEND" \
            --api-url "$API_URL" \
            --model "$MODEL" \
            --batch-size "$BATCH_SIZE" \
            --max-retries "$MAX_RETRIES" \
            --temperature "$TEMPERATURE" \
            --top-p "$TOP_P"; then

            success=$((success + 1))
            print_success "–£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω: $basename"
        else
            failed=$((failed + 1))
            print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ: $basename"
        fi
    done

    echo ""
    print_header "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞"
    echo "–í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: $total"
    print_success "–£—Å–ø–µ—à–Ω–æ: $success"
    if [ $failed -gt 0 ]; then
        print_error "–û—à–∏–±–∫–∏: $failed"
    fi
}

# –®–∞–≥ 3: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
apply_translations() {
    print_header "–®–∞–≥ 3: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤"

    python3 llm_translate_apply.py \
        --batch-json "$JSON_DIR" \
        --batch-rpy "$MODULES_DIR"

    print_success "–ü–µ—Ä–µ–≤–æ–¥—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –®–∞–≥ 4: –£–ø–∞–∫–æ–≤–∫–∞ –≤ –∏–≥—Ä—É
pack_translations() {
    print_header "–®–∞–≥ 4: –£–ø–∞–∫–æ–≤–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –≤ –∏–≥—Ä—É"

    python3 smart_pack_translations.py

    print_success "–ü–µ—Ä–µ–≤–æ–¥—ã —É–ø–∞–∫–æ–≤–∞–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
check_status() {
    print_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–µ—Ä–µ–≤–æ–¥–∞"

    python3 translation_helper.py
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    cd "$(dirname "$0")"  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞

    print_header "ü§ñ LLM Batch Translation Pipeline"
    echo "API: $API_URL"
    echo "Model: $MODEL"
    echo ""

    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    PREPARE_ONLY=false
    TRANSLATE_ONLY=false
    APPLY_ONLY=false
    SKIP_BACKUP=false

    for arg in "$@"; do
        case $arg in
            --prepare-only)
                PREPARE_ONLY=true
                ;;
            --translate-only)
                TRANSLATE_ONLY=true
                ;;
            --apply-only)
                APPLY_ONLY=true
                ;;
            --skip-backup)
                SKIP_BACKUP=true
                ;;
            --help)
                echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
                echo ""
                echo "–û–ø—Ü–∏–∏:"
                echo "  --prepare-only    –¢–æ–ª—å–∫–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ JSON"
                echo "  --translate-only  –¢–æ–ª—å–∫–æ –ø–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ LLM"
                echo "  --apply-only      –¢–æ–ª—å–∫–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤"
                echo "  --skip-backup     –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ"
                echo "  --help            –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
                echo ""
                echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
                echo "  LLM_API_URL       URL API (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: http://localhost:8080/v1/chat/completions)"
                echo "  LLM_MODEL         –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: local-model)"
                echo "  LLM_TEMPERATURE   Temperature (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 0.3)"
                echo "  LLM_MAX_TOKENS    Max tokens (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 2000)"
                exit 0
                ;;
        esac
    done

    # –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ)
    if [ "$SKIP_BACKUP" = false ] && [ "$TRANSLATE_ONLY" = false ] && [ "$PREPARE_ONLY" = false ]; then
        backup_modules
        echo ""
    fi

    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–∞–ø–æ–≤
    if [ "$PREPARE_ONLY" = true ]; then
        prepare_modules
    elif [ "$TRANSLATE_ONLY" = true ]; then
        translate_modules
    elif [ "$APPLY_ONLY" = true ]; then
        apply_translations
        echo ""
        pack_translations
    else
        # –ü–æ–ª–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω
        prepare_modules
        echo ""

        translate_modules
        echo ""

        apply_translations
        echo ""

        pack_translations
        echo ""

        check_status
    fi

    echo ""
    print_header "üéâ –ì–æ—Ç–æ–≤–æ!"
    echo ""
    echo "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –≤ translation_modules/"
    echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–≥—Ä—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: cd .. && ./Ravager.sh"
    echo "3. –í –∏–≥—Ä–µ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö"
}

# –ó–∞–ø—É—Å–∫
main "$@"
